{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","components/Menu.tsx","pages/customer/CustomerAPI.ts","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/employee/EmployeeAPI.ts","pages/employee/EmployeeEdit.tsx","pages/employee/EmployeeList.tsx","pages/vendor/VendorAPI.ts","pages/vendor/VendorList.tsx","pages/vendor/VendorEdit.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","appPages","title","url","iosIcon","peopleOutline","mdIcon","people","labels","Menu","location","useLocation","contentId","type","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","label","icon","bookmarkOutline","searchCustomers","a","process","fetch","response","json","removeCustomer","saveCustomer","customer","JSON","stringify","searchCustomerById","CustomerList","name","useParams","useState","customers","setCustomers","history","useHistory","search","result","useEffect","remove","fullscreen","collapse","size","onClick","push","color","fill","add","firstName","lastName","email","phone","address","String","pencil","close","CustomerEdit","setCustomer","routeMatch","useRouteMatch","params","save","position","onIonChange","value","checkmark","searchEmployees","removeEmployee","saveEmployee","employee","searchEmployeeById","EmployeeEdit","setEmployee","salary","Number","EmployeeList","employees","setEmployees","searchVendors","removeVendor","saveVendor","vendor","searchVendorById","VendorList","vendors","setVendors","web","VendorEdit","setVendor","contact","setupIonicReact","App","path","exact","to","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.375fa83b.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 54;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 55;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t82,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 56;\nmodule.exports = webpackAsyncContext;","import {\n\tIonContent,\n\tIonIcon,\n\tIonItem,\n\tIonLabel,\n\tIonList,\n\tIonListHeader,\n\tIonMenu,\n\tIonMenuToggle,\n\tIonNote,\n} from \"@ionic/react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport { bookmarkOutline, people, peopleOutline } from \"ionicons/icons\";\nimport \"./Menu.css\";\n\ninterface AppPage {\n\turl: string;\n\tiosIcon: string;\n\tmdIcon: string;\n\ttitle: string;\n}\n\nconst appPages: AppPage[] = [\n\t{\n\t\ttitle: \"Customers\",\n\t\turl: \"/page/customers\",\n\t\tiosIcon: peopleOutline,\n\t\tmdIcon: people\n\t},\n\t{\n\t\ttitle: \"Employees\",\n\t\turl: \"/page/employees\",\n\t\tiosIcon: peopleOutline,\n\t\tmdIcon: people\n\t},\n\t{\n\t\ttitle: \"Vendors\",\n\t\turl: \"/page/vendors\",\n\t\tiosIcon: peopleOutline,\n\t\tmdIcon: people\n\t},\n];\n\nconst labels = [\"Family\", \"Friends\", \"Notes\", \"Work\", \"Travel\", \"Reminders\"];\n\nconst Menu: React.FC = () => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<IonMenu contentId = \"main\" type = \"overlay\">\n\t\t\t<IonContent>\n\t\t\t\t<IonList id = \"inbox-list\">\n\t\t\t\t\t<IonListHeader>Inbox</IonListHeader>\n\t\t\t\t\t<IonNote>hi@ionicframework.com</IonNote>\n\t\t\t\t\t{appPages.map((appPage, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<IonMenuToggle key = {index} autoHide = {false}>\n\t\t\t\t\t\t\t\t<IonItem className = {location.pathname === appPage.url ? \"selected\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t routerLink = {appPage.url}\n\t\t\t\t\t\t\t\t\t\t\t\t routerDirection = \"none\"\n\t\t\t\t\t\t\t\t\t\t\t\t lines = \"none\"\n\t\t\t\t\t\t\t\t\t\t\t\t detail = {false}>\n\t\t\t\t\t\t\t\t\t<IonIcon slot = \"start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t ios = {appPage.iosIcon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t md = {appPage.mdIcon} />\n\t\t\t\t\t\t\t\t\t<IonLabel>{appPage.title}</IonLabel>\n\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t</IonMenuToggle>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</IonList>\n\n\t\t\t\t<IonList id = \"labels-list\">\n\t\t\t\t\t<IonListHeader>Labels</IonListHeader>\n\t\t\t\t\t{labels.map((label, index) => (\n\t\t\t\t\t\t<IonItem lines = \"none\" key = {index}>\n\t\t\t\t\t\t\t<IonIcon slot = \"start\" icon = {bookmarkOutline} />\n\t\t\t\t\t\t\t<IonLabel>{label}</IonLabel>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t))}\n\t\t\t\t</IonList>\n\t\t\t</IonContent>\n\t\t</IonMenu>\n\t);\n};\n\nexport default Menu;\n","import Customer from \"./Customer\";\r\n\r\nexport async function searchCustomers() {\r\n\tlet url = process.env.REACT_APP_API + \"customers\";\r\n\tlet response = await fetch(url, {\r\n\t\t\"method\": \"GET\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\treturn await response.json();\r\n}\r\n\r\nexport async function removeCustomer(id: string) {\r\n\tlet url = process.env.REACT_APP_API + \"customers/\" + id;\r\n\tawait fetch(url, {\r\n\t\t\"method\": \"DELETE\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function saveCustomer(customer: Customer) {\r\n\tlet url = process.env.REACT_APP_API + \"customers\";\r\n\tawait fetch(url, {\r\n\t\t\"method\": \"POST\",\r\n\t\t\"body\": JSON.stringify(customer),\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function searchCustomerById(id: string) {\r\n\tlet url = process.env.REACT_APP_API + \"customers/\" + id;\r\n\tlet response = await fetch(url, {\r\n\t\t\"method\": \"GET\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\treturn await response.json();\r\n}\r\n","import {\r\n\tIonButton,\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCol,\r\n\tIonContent,\r\n\tIonGrid,\r\n\tIonHeader,\r\n\tIonIcon,\r\n\tIonItem,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonRow,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from \"@ionic/react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport \"../Page.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { add, close, pencil } from \"ionicons/icons\";\r\nimport { removeCustomer, searchCustomers } from \"./CustomerAPI\";\r\nimport Customer from \"./Customer\";\r\n\r\nconst CustomerList: React.FC = () => {\r\n\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\tconst [customers, setCustomers] = useState<Customer[]>([]);\r\n\tconst history = useHistory();\r\n\r\n\tconst search = async () => {\r\n\t\tlet result = await searchCustomers();\r\n\t\tsetCustomers(result);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch();\r\n\t}, [history.location.pathname]);\r\n\r\n\r\n\tconst remove = async (id: string) => {\r\n\t\tawait removeCustomer(id);\r\n\t\tsearch();\r\n\t};\r\n\r\n\tconst addCustomer = () => {\r\n\t\thistory.push(\"customer/new\");\r\n\t};\r\n\r\n\tconst editCustomer = (id: string) => {\r\n\t\thistory.push(\"customer/\" + id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot = \"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>{name}</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse = \"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonTitle size = \"large\">{name}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t{/*//Grid start*/}\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t<IonCard>\r\n\t\t\t\t\t\t<IonTitle>Customer Management</IonTitle>\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonButton onClick = {addCustomer} color = \"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t fill = \"solid\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t slot = \"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t size = \"default\">\r\n\t\t\t\t\t\t\t\t<IonIcon icon = {add} /> Add customer\r\n\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t<IonGrid className = \"table\">\r\n\t\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t\t<IonCol>Name</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Email</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Phone</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Address</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Actions</IonCol>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t\t{customers.map((customer: Customer) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<IonRow key = {customer.id}>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{customer.firstName} {customer.lastName}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{customer.email}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{customer.phone}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{customer.address}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick = {() => editCustomer(String(customer.id))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t color = \"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = \"clear\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonIcon icon = {pencil} slot = \"icon-only\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick = {() => remove(String(customer.id))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t color = \"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = \"clear\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonIcon icon = {close} slot = \"icon-only\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</IonGrid>\r\n\t\t\t\t\t</IonCard>\r\n\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default CustomerList;\r\n","import {\r\n\tIonButton,\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCol,\r\n\tIonContent,\r\n\tIonHeader,\r\n\tIonIcon,\r\n\tIonInput,\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonRow,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from \"@ionic/react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\r\nimport \"../Page.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { checkmark } from \"ionicons/icons\";\r\nimport { saveCustomer, searchCustomerById } from \"./CustomerAPI\";\r\nimport Customer from \"./Customer\";\r\n\r\nconst CustomerEdit: React.FC = () => {\r\n\r\n\tconst { name } = useParams<{ name: string; id: string }>();\r\n\r\n\tconst [customer, setCustomer] = useState<Customer>({});\r\n\tconst history = useHistory();\r\n\r\n\tconst routeMatch: any = useRouteMatch(\"/page/customer/:id\");\r\n\tlet id = routeMatch?.params?.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch();\r\n\t}, [history.location.pathname]);\r\n\r\n\tconst search = async () => {\r\n\t\tif (id === \"new\") {\r\n\t\t\tsetCustomer({});\r\n\t\t} else {\r\n\t\t\tlet result = await searchCustomerById(id);\r\n\t\t\tsetCustomer(result);\r\n\t\t}\r\n\t};\r\n\r\n\tconst save = async () => {\r\n\t\tawait saveCustomer(customer);\r\n\t\thistory.push(\"/page/customers\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot = \"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>{name}</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse = \"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonTitle size = \"large\">{name}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t{/*//Grid start*/}\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t<IonCard>\r\n\t\t\t\t\t\t<IonTitle>{id === \"new\" ? \"Add customer\" : \"Edit customer\"}</IonTitle>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">First Name</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => customer.firstName = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {customer.firstName}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Last Name</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => customer.lastName = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {customer.lastName}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Email</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => customer.email = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {customer.email}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Phone</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => customer.phone = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {customer.phone}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Address</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => customer.address = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {customer.address}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonButton onClick = {save}\r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"success\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t fill = \"solid\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t slot = \"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t size = \"default\">\r\n\t\t\t\t\t\t\t\t<IonIcon icon = {checkmark} /> Save\r\n\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t</IonCard>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default CustomerEdit;\r\n","import Employee from \"./Employee\";\r\n\r\nexport async function searchEmployees() {\r\n\tlet url = process.env.REACT_APP_API + \"employees\";\r\n\tlet response = await fetch(url, {\r\n\t\t\"method\": \"GET\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\treturn await response.json();\r\n}\r\n\r\nexport async function removeEmployee(id: string) {\r\n\tlet url = process.env.REACT_APP_API + \"employees/\" + id;\r\n\tawait fetch(url, {\r\n\t\t\"method\": \"DELETE\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function saveEmployee(employee: Employee) {\r\n\tlet url = process.env.REACT_APP_API + \"employees\";\r\n\tawait fetch(url, {\r\n\t\t\"method\": \"POST\",\r\n\t\t\"body\": JSON.stringify(employee),\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function searchEmployeeById(id: string) {\r\n\tlet url = process.env.REACT_APP_API + \"employees/\" + id;\r\n\tlet response = await fetch(url, {\r\n\t\t\"method\": \"GET\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\treturn await response.json();\r\n}\r\n","import {\r\n\tIonButton,\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCol,\r\n\tIonContent,\r\n\tIonHeader,\r\n\tIonIcon,\r\n\tIonInput,\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonRow,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from \"@ionic/react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\r\nimport \"../Page.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { checkmark } from \"ionicons/icons\";\r\nimport { saveEmployee, searchEmployeeById } from \"./EmployeeAPI\";\r\nimport Employee from \"./Employee\";\r\n\r\nconst EmployeeEdit: React.FC = () => {\r\n\r\n\tconst { name } = useParams<{ name: string; id: string }>();\r\n\r\n\tconst [employee, setEmployee] = useState<Employee>({});\r\n\tconst history = useHistory();\r\n\r\n\tconst routeMatch: any = useRouteMatch(\"/page/employee/:id\");\r\n\tlet id = routeMatch?.params?.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch();\r\n\t}, [history.location.pathname]);\r\n\r\n\tconst search = async () => {\r\n\t\tif (id === \"new\") {\r\n\t\t\tsetEmployee({});\r\n\t\t} else {\r\n\t\t\tlet result = await searchEmployeeById(id);\r\n\t\t\tsetEmployee(result);\r\n\t\t}\r\n\t};\r\n\r\n\tconst save = async () => {\r\n\t\tawait saveEmployee(employee);\r\n\t\thistory.push(\"/page/employees\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot = \"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>{name}</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse = \"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonTitle size = \"large\">{name}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t{/*//Grid start*/}\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t<IonCard>\r\n\t\t\t\t\t\t<IonTitle>{id === \"new\" ? \"Add employee\" : \"Edit employee\"}</IonTitle>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">First Name</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => employee.firstName = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {employee.firstName}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Last Name</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => employee.lastName = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {employee.lastName}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Email</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => employee.email = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {employee.email}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Phone</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => employee.phone = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {employee.phone}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Address</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => employee.address = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {employee.address}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Salary</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => employee.salary = Number(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {employee.salary}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonButton onClick = {save}\r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"success\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t fill = \"solid\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t slot = \"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t size = \"default\">\r\n\t\t\t\t\t\t\t\t<IonIcon icon = {checkmark} /> Save\r\n\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t</IonCard>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default EmployeeEdit;\r\n","import {\r\n\tIonButton,\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCol,\r\n\tIonContent,\r\n\tIonGrid,\r\n\tIonHeader,\r\n\tIonIcon,\r\n\tIonItem,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonRow,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from \"@ionic/react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport \"../Page.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { add, close, pencil } from \"ionicons/icons\";\r\nimport { removeEmployee, searchEmployees } from \"./EmployeeAPI\";\r\nimport Employee from \"./Employee\";\r\n\r\nconst EmployeeList: React.FC = () => {\r\n\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\tconst [employees, setEmployees] = useState<Employee[]>([]);\r\n\tconst history = useHistory();\r\n\r\n\tconst search = async () => {\r\n\t\tlet result = await searchEmployees();\r\n\t\tsetEmployees(result);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch();\r\n\t}, [history.location.pathname]);\r\n\r\n\r\n\tconst remove = async (id: string) => {\r\n\t\tawait removeEmployee(id);\r\n\t\tsearch();\r\n\t};\r\n\r\n\tconst addEmployee = () => {\r\n\t\thistory.push(\"employee/new\");\r\n\t};\r\n\r\n\tconst editEmployee = (id: string) => {\r\n\t\thistory.push(\"employee/\" + id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot = \"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>{name}</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse = \"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonTitle size = \"large\">{name}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t{/*//Grid start*/}\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t<IonCard>\r\n\t\t\t\t\t\t<IonTitle>Employee Management</IonTitle>\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonButton onClick = {addEmployee} color = \"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t fill = \"solid\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t slot = \"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t size = \"default\">\r\n\t\t\t\t\t\t\t\t<IonIcon icon = {add} /> Add employee\r\n\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t<IonGrid className = \"table\">\r\n\t\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t\t<IonCol>Name</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Email</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Phone</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Salary</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Actions</IonCol>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t\t{employees.map((employee: Employee) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<IonRow key = {employee.id}>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{employee.firstName} {employee.lastName}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{employee.email}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{employee.phone}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{employee.salary}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick = {() => editEmployee(String(employee.id))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t color = \"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = \"clear\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonIcon icon = {pencil} slot = \"icon-only\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick = {() => remove(String(employee.id))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t color = \"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = \"clear\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonIcon icon = {close} slot = \"icon-only\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</IonGrid>\r\n\t\t\t\t\t</IonCard>\r\n\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default EmployeeList;\r\n","import Vendor from \"./Vendor\";\r\n\r\nexport async function searchVendors() {\r\n\tlet url = process.env.REACT_APP_API + \"vendors\";\r\n\tlet response = await fetch(url, {\r\n\t\t\"method\": \"GET\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\treturn await response.json();\r\n}\r\n\r\nexport async function removeVendor(id: string) {\r\n\tlet url = process.env.REACT_APP_API + \"vendors/\" + id;\r\n\tawait fetch(url, {\r\n\t\t\"method\": \"DELETE\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function saveVendor(vendor: Vendor) {\r\n\tlet url = process.env.REACT_APP_API + \"vendors\";\r\n\tawait fetch(url, {\r\n\t\t\"method\": \"POST\",\r\n\t\t\"body\": JSON.stringify(vendor),\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function searchVendorById(id: string) {\r\n\tlet url = process.env.REACT_APP_API + \"vendors/\" + id;\r\n\tlet response = await fetch(url, {\r\n\t\t\"method\": \"GET\",\r\n\t\t\"headers\": {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\treturn await response.json();\r\n}\r\n","import {\r\n\tIonButton,\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCol,\r\n\tIonContent,\r\n\tIonGrid,\r\n\tIonHeader,\r\n\tIonIcon,\r\n\tIonItem,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonRow,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from \"@ionic/react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport \"../Page.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { add, close, pencil } from \"ionicons/icons\";\r\nimport { removeVendor, searchVendors } from \"./VendorAPI\";\r\nimport Vendor from \"./Vendor\";\r\n\r\nconst VendorList: React.FC = () => {\r\n\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\tconst [vendors, setVendors] = useState<Vendor[]>([]);\r\n\tconst history = useHistory();\r\n\r\n\tconst search = async () => {\r\n\t\tlet result = await searchVendors();\r\n\t\tsetVendors(result);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch();\r\n\t}, [history.location.pathname]);\r\n\r\n\r\n\tconst remove = async (id: string) => {\r\n\t\tawait removeVendor(id);\r\n\t\tsearch();\r\n\t};\r\n\r\n\tconst addVendor = () => {\r\n\t\thistory.push(\"vendor/new\");\r\n\t};\r\n\r\n\tconst editVendor = (id: string) => {\r\n\t\thistory.push(\"vendor/\" + id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot = \"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>{name}</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse = \"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonTitle size = \"large\">{name}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t{/*//Grid start*/}\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t<IonCard>\r\n\t\t\t\t\t\t<IonTitle>Vendor Management</IonTitle>\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonButton onClick = {addVendor} color = \"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t fill = \"solid\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t slot = \"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t size = \"default\">\r\n\t\t\t\t\t\t\t\t<IonIcon icon = {add} /> Add vendor\r\n\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t<IonGrid className = \"table\">\r\n\t\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t\t<IonCol>Name</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Email</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Phone</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Web</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol>Actions</IonCol>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t\t{vendors.map((vendor: Vendor) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<IonRow key = {vendor.id}>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{vendor.name} {vendor.name}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{vendor.email}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{vendor.phone}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>{vendor.web}</IonCol>\r\n\t\t\t\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick = {() => editVendor(String(vendor.id))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t color = \"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = \"clear\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonIcon icon = {pencil} slot = \"icon-only\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonButton onClick = {() => remove(String(vendor.id))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t color = \"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fill = \"clear\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonIcon icon = {close} slot = \"icon-only\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</IonGrid>\r\n\t\t\t\t\t</IonCard>\r\n\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default VendorList;\r\n","import {\r\n\tIonButton,\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCol,\r\n\tIonContent,\r\n\tIonHeader,\r\n\tIonIcon,\r\n\tIonInput,\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonRow,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from \"@ionic/react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\r\nimport \"../Page.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { checkmark } from \"ionicons/icons\";\r\nimport { saveVendor, searchVendorById } from \"./VendorAPI\";\r\nimport Vendor from \"./Vendor\";\r\n\r\nconst VendorEdit: React.FC = () => {\r\n\r\n\tconst { name } = useParams<{ name: string; id: string }>();\r\n\r\n\tconst [vendor, setVendor] = useState<Vendor>({});\r\n\tconst history = useHistory();\r\n\r\n\tconst routeMatch: any = useRouteMatch(\"/page/vendor/:id\");\r\n\tlet id = routeMatch?.params?.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch();\r\n\t}, [history.location.pathname]);\r\n\r\n\tconst search = async () => {\r\n\t\tif (id === \"new\") {\r\n\t\t\tsetVendor({});\r\n\t\t} else {\r\n\t\t\tlet result = await searchVendorById(id);\r\n\t\t\tsetVendor(result);\r\n\t\t}\r\n\t};\r\n\r\n\tconst save = async () => {\r\n\t\tawait saveVendor(vendor);\r\n\t\thistory.push(\"/page/vendors\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot = \"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>{name}</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse = \"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonTitle size = \"large\">{name}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t{/*//Grid start*/}\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t<IonCard>\r\n\t\t\t\t\t\t<IonTitle>{id === \"new\" ? \"Add vendor\" : \"Edit vendor\"}</IonTitle>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Name</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => vendor.name = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {vendor.name}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Contact</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => vendor.contact = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {vendor.contact}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Email</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => vendor.email = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {vendor.email}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Phone</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => vendor.phone = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {vendor.phone}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Address</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => vendor.address = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {vendor.address}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t<IonCol>\r\n\t\t\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t\t\t<IonLabel position = \"stacked\">Web</IonLabel>\r\n\t\t\t\t\t\t\t\t\t<IonInput onIonChange = {e => vendor.web = String(e.detail.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {vendor.web}> </IonInput>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t</IonRow>\r\n\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonButton onClick = {save}\r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"success\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t fill = \"solid\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t slot = \"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t size = \"default\">\r\n\t\t\t\t\t\t\t\t<IonIcon icon = {checkmark} /> Save\r\n\t\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t</IonCard>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default VendorEdit;\r\n","import { IonApp, IonRouterOutlet, IonSplitPane, setupIonicReact } from \"@ionic/react\";\nimport { IonReactRouter } from \"@ionic/react-router\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\n//import Page from \"./pages/Page\";\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"src/theme/variables.css\";\n\n/* Pages */\nimport CustomerList from \"src/pages/customer/CustomerList\";\nimport CustomerEdit from \"./pages/customer/CustomerEdit\";\nimport EmployeeEdit from \"./pages/employee/EmployeeEdit\";\nimport EmployeeList from \"./pages/employee/EmployeeList\";\nimport VendorList from \"./pages/vendor/VendorList\";\nimport VendorEdit from \"./pages/vendor/VendorEdit\";\n\nsetupIonicReact();\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<IonApp>\n\t\t\t<IonReactRouter>\n\t\t\t\t<IonSplitPane contentId = \"main\">\n\t\t\t\t\t<Menu />\n\t\t\t\t\t<IonRouterOutlet id = \"main\">\n\t\t\t\t\t\t<Route path = \"/\" exact = {true}>\n\t\t\t\t\t\t\t<Redirect to = \"/page/customers\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t{/*\t\t\t\t\t\t<Route path = \"/page/:name\" exact = {true}>\n\t\t\t\t\t\t <Page />\n\t\t\t\t\t\t </Route>*/}\n\t\t\t\t\t\t<Route path = \"/page/customers\" exact = {true}>\n\t\t\t\t\t\t\t<CustomerList />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/page/customer/:id\" exact = {true}>\n\t\t\t\t\t\t\t<CustomerEdit />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/page/employees\" exact = {true}>\n\t\t\t\t\t\t\t<EmployeeList />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/page/employee/:id\" exact = {true}>\n\t\t\t\t\t\t\t<EmployeeEdit />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/page/vendors\" exact = {true}>\n\t\t\t\t\t\t\t<VendorList />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path = \"/page/vendor/:id\" exact = {true}>\n\t\t\t\t\t\t\t<VendorEdit />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</IonRouterOutlet>\n\t\t\t\t</IonSplitPane>\n\t\t\t</IonReactRouter>\n\t\t</IonApp>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === \"[::1]\" ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\"worker. To learn more, visit https://cra.link/PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://cra.link/PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t( contentType != null && contentType.indexOf(\"javascript\") === -1 )\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}